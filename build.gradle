/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.4.1/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'

}
apply plugin: 'idea'
apply plugin: "maven"
apply plugin: 'signing'

repositories {
    mavenCentral()
    mavenLocal()
}

def geodeVersion = '1.10.0'
def springBatchVersion = '4.2.1.RELEASE'

group = 'io.pivotal.services.dataTx'
//name = "dataTx-spring-batch-geode-extensions"
version = '0.0.1'
sourceCompatibility = 1.8



//Solution by the first link
if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.compile
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

jar {
    manifest {
        attributes 'Implementation-Title': 'dataTx-spring-batch-geode-extensions$'
    }
}

artifacts {
    archives javadocJar, sourcesJar
}


signing {
    sign configurations.archives
}

dependencies {
    compile group: 'org.apache.geode', name: 'geode-common', version: geodeVersion
    compile group: 'org.apache.geode', name: 'geode-core', version: geodeVersion
    compile group: 'org.springframework.batch', name: 'spring-batch-core', version: springBatchVersion
    compile group: 'com.github.nyla-solutions', name: 'nyla.solutions.core', version: '1.2.5'


    api 'org.apache.commons:commons-math3:3.6.1'
    implementation 'com.google.guava:guava:27.0.1-jre'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.6.0-M1'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '3.0.0'

}


uploadArchives {

    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }


            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'dataTx-spring-batch-geode-extensions'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'Apache Geode Spring Batch extensions'
                url 'https://github.com/Pivotal-Data-Engineering/dataTx-spring-batch-geode-extensions'

                scm {
                    url 'https://github.com/Pivotal-Data-Engineering/dataTx-spring-batch-geode-extensions.git'
                }


                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'ggreen'
                        name 'Gregory Green'
                        email 'ggreen@pivotal.io'
                    }
                }
            }
        }
    }
}